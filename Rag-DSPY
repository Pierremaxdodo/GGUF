{"cells":[{"cell_type":"markdown","metadata":{},"source":["# 1. Installations"]},{"cell_type":"code","execution_count":null,"metadata":{"_kg_hide-output":true,"collapsed":true,"execution":{"iopub.execute_input":"2024-07-15T09:33:52.873505Z","iopub.status.busy":"2024-07-15T09:33:52.873213Z","iopub.status.idle":"2024-07-15T09:34:56.754047Z","shell.execute_reply":"2024-07-15T09:34:56.752935Z","shell.execute_reply.started":"2024-07-15T09:33:52.873480Z"},"jupyter":{"outputs_hidden":true},"trusted":true},"outputs":[],"source":["!pip install -U transformers\n","!pip install dspy-ai\n","!pip install weaviate-client"]},{"cell_type":"code","execution_count":null,"metadata":{"execution":{"iopub.execute_input":"2024-07-15T09:34:56.756856Z","iopub.status.busy":"2024-07-15T09:34:56.756451Z","iopub.status.idle":"2024-07-15T09:34:57.375509Z","shell.execute_reply":"2024-07-15T09:34:57.374655Z","shell.execute_reply.started":"2024-07-15T09:34:56.756815Z"},"trusted":true},"outputs":[],"source":["from kaggle_secrets import UserSecretsClient\n","from huggingface_hub import login\n","\n","user_secrets = UserSecretsClient()\n","hf_token = user_secrets.get_secret(\"HF\")\n","# Login to Hugging Face\n","login(hf_token)"]},{"cell_type":"markdown","metadata":{},"source":["# 2. Téléchargement des données \n","\n","Ici les données sont simples et ne demandent pas de prétraitement comme le chunking"]},{"cell_type":"code","execution_count":null,"metadata":{"execution":{"iopub.execute_input":"2024-07-15T09:34:57.377177Z","iopub.status.busy":"2024-07-15T09:34:57.376830Z","iopub.status.idle":"2024-07-15T09:34:59.386793Z","shell.execute_reply":"2024-07-15T09:34:59.385853Z","shell.execute_reply.started":"2024-07-15T09:34:57.377144Z"},"trusted":true},"outputs":[],"source":["import pandas as pd\n","pd.set_option('display.max_colwidth', None) # affichage des phrases enitières dans le dataset\n","\n","df = pd.read_csv(\"/kaggle/input/competition.csv\")\n","\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"execution":{"iopub.execute_input":"2024-07-15T09:34:59.389367Z","iopub.status.busy":"2024-07-15T09:34:59.389066Z","iopub.status.idle":"2024-07-15T09:34:59.405587Z","shell.execute_reply":"2024-07-15T09:34:59.404700Z","shell.execute_reply.started":"2024-07-15T09:34:59.389341Z"},"trusted":true},"outputs":[],"source":["# Ne prendre en compte que 100 données du dataset \n","df = df[(df.HostSegmentTitle == \"Featured\") & (df.Subtitle.notna())][-100:]\n","df[['Title', 'Subtitle']].head()"]},{"cell_type":"code","execution_count":14,"metadata":{"execution":{"iopub.execute_input":"2024-07-15T09:38:03.527317Z","iopub.status.busy":"2024-07-15T09:38:03.526626Z","iopub.status.idle":"2024-07-15T09:38:03.535560Z","shell.execute_reply":"2024-07-15T09:38:03.534516Z","shell.execute_reply.started":"2024-07-15T09:38:03.527284Z"},"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":["                                  Title                       Subtitle\n","5135  Bosch Production Line Performance  Reduce manufacturing failures\n"]}],"source":["filtered_df = df[df['Title'].str.contains(\"Bosch\", case=False, na=False)]\n","\n","print(filtered_df[['Title', 'Subtitle']])"]},{"cell_type":"markdown","metadata":{},"source":["# 3. Téléchargement des données dans Weaviate"]},{"cell_type":"code","execution_count":null,"metadata":{"_kg_hide-output":true,"execution":{"iopub.execute_input":"2024-07-15T09:34:59.432359Z","iopub.status.busy":"2024-07-15T09:34:59.432112Z","iopub.status.idle":"2024-07-15T09:35:03.013103Z","shell.execute_reply":"2024-07-15T09:35:03.012053Z","shell.execute_reply.started":"2024-07-15T09:34:59.432337Z"},"trusted":true},"outputs":[],"source":["import weaviate\n","from weaviate.embedded import EmbeddedOptions\n","import re\n","\n","# Connection à Weaviate client in embedded mode\n","client = weaviate.Client(embedded_options=EmbeddedOptions(),\n","                             additional_headers={\n","                                \"X-Huggingface-Api-Key\": hf_token,\n","                             }\n","                         )\n","\n","# Définition du schéma de la collection de données\n","schema = {\n","   \"classes\": [\n","       {\n","           \"class\": \"MyExampleIndex\",\n","           \"vectorizer\": \"text2vec-huggingface\",\n","            \"moduleConfig\": {\n","                \"text2vec-huggingface\": {\n","                    \"model\": \"sentence-transformers/all-MiniLM-L6-v2\",\n","                }\n","            },\n","           \"properties\": [\n","               {\n","                   \"name\": \"content\", # This is a required property name to be able to use Weaviate as RM with DSPy\n","                   \"dataType\": [\"text\"]\n","               }\n","           ]\n","       }      \n","   ]\n","}\n","\n","# Supprimer la collection de données existante si elle existe déjà à partir d'une exécution précédente\n","if client.schema.exists(\"MyExampleIndex\"):\n","    client.schema.delete_class(\"MyExampleIndex\")\n","client.schema.create(schema)\n","\n","# Configuration de la taile du batch \n","client.batch.configure(batch_size=100)\n","\n","with client.batch as batch: \n","    for _, row in df.iterrows():\n","        properties = {\n","            \"content\": row['Title'] + ' Kaggle Competition: ' + row['Subtitle']\n","        }\n","        batch.add_data_object(\n","            data_object=properties,\n","            class_name=\"MyExampleIndex\"\n","        )"]},{"cell_type":"code","execution_count":8,"metadata":{"execution":{"iopub.execute_input":"2024-07-15T09:35:03.014966Z","iopub.status.busy":"2024-07-15T09:35:03.014422Z","iopub.status.idle":"2024-07-15T09:35:03.024608Z","shell.execute_reply":"2024-07-15T09:35:03.023719Z","shell.execute_reply.started":"2024-07-15T09:35:03.014930Z"},"trusted":true},"outputs":[{"data":{"text/plain":["{'data': {'Aggregate': {'MyExampleIndex': [{'meta': {'count': 89}}]}}}"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["client.query.aggregate(\"MyExampleIndex\").with_meta_count().do()"]},{"cell_type":"markdown","metadata":{},"source":["# 4. Recherche sémantique dans la base de données Weaviate "]},{"cell_type":"code","execution_count":null,"metadata":{"execution":{"iopub.execute_input":"2024-07-15T09:35:03.026057Z","iopub.status.busy":"2024-07-15T09:35:03.025777Z","iopub.status.idle":"2024-07-15T09:35:03.066156Z","shell.execute_reply":"2024-07-15T09:35:03.065222Z","shell.execute_reply.started":"2024-07-15T09:35:03.026034Z"},"trusted":true},"outputs":[],"source":["import json \n","\n","response = (\n","    client.query\n","    .get(\"MyExampleIndex\", [\"content\"])\n","    .with_near_text({\"concepts\": [\"e-commerce\"]})\n","    .with_limit(3)\n","    .do()\n",")\n","\n","print(json.dumps(response, indent=4))"]},{"cell_type":"markdown","metadata":{},"source":["# 5. Configuration de DSPy "]},{"cell_type":"code","execution_count":null,"metadata":{"execution":{"iopub.execute_input":"2024-07-15T09:35:03.071050Z","iopub.status.busy":"2024-07-15T09:35:03.070584Z","iopub.status.idle":"2024-07-15T09:36:01.084840Z","shell.execute_reply":"2024-07-15T09:36:01.083918Z","shell.execute_reply.started":"2024-07-15T09:35:03.071014Z"},"trusted":true},"outputs":[],"source":["!pip install --upgrade google-api-python-client\n","!pip install --upgrade protobuf"]},{"cell_type":"code","execution_count":null,"metadata":{"execution":{"iopub.execute_input":"2024-07-15T09:36:01.086516Z","iopub.status.busy":"2024-07-15T09:36:01.086221Z","iopub.status.idle":"2024-07-15T09:36:03.015142Z","shell.execute_reply":"2024-07-15T09:36:03.013557Z","shell.execute_reply.started":"2024-07-15T09:36:01.086487Z"},"trusted":true},"outputs":[],"source":["import dspy"]},{"cell_type":"markdown","metadata":{},"source":["## Language Model: Google Gemma\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"execution":{"iopub.status.busy":"2024-07-15T09:36:03.016159Z","iopub.status.idle":"2024-07-15T09:36:03.016514Z","shell.execute_reply":"2024-07-15T09:36:03.016362Z","shell.execute_reply.started":"2024-07-15T09:36:03.016348Z"},"trusted":true},"outputs":[],"source":["# Définition du llm via DSPY\n","llm = dspy.HFModel(model = 'google/gemma-2b') # dspy.OpenAI(model='gpt-3.5-turbo')"]},{"cell_type":"code","execution_count":null,"metadata":{"execution":{"iopub.status.busy":"2024-07-15T09:36:03.017756Z","iopub.status.idle":"2024-07-15T09:36:03.018120Z","shell.execute_reply":"2024-07-15T09:36:03.017976Z","shell.execute_reply.started":"2024-07-15T09:36:03.017962Z"},"trusted":true},"outputs":[],"source":["example_query = \"Which Kaggle competition should I look at to learn more about recommender systems in e-commerce?\"\n","\n","response = llm(example_query, do_sample=True) # do_sample = True active l'échantillionnage sinon cela se fait de façon déterministe\n","                                              # top_k , pour choisir le nbr de mots les plus probables qui peuvent tomber\n","print(response)"]},{"cell_type":"markdown","metadata":{},"source":["## Retriever Model: Weaviate\n","Dspy est lié à WeaviateRM : il faut donc reconfigurer notre Weaviate préalable pour pouvoir l'utiliser avec DSPY"]},{"cell_type":"code","execution_count":null,"metadata":{"execution":{"iopub.status.busy":"2024-07-15T09:36:03.019480Z","iopub.status.idle":"2024-07-15T09:36:03.019841Z","shell.execute_reply":"2024-07-15T09:36:03.019656Z","shell.execute_reply.started":"2024-07-15T09:36:03.019642Z"},"trusted":true},"outputs":[],"source":["from dspy.retrieve.weaviate_rm import WeaviateRM\n","\n","# Configuration du nouveau Retriever Model \n","rm = WeaviateRM(\"MyExampleIndex\", \n","                weaviate_client = client)"]},{"cell_type":"code","execution_count":null,"metadata":{"execution":{"iopub.status.busy":"2024-07-15T09:36:03.021319Z","iopub.status.idle":"2024-07-15T09:36:03.021826Z","shell.execute_reply":"2024-07-15T09:36:03.021578Z","shell.execute_reply.started":"2024-07-15T09:36:03.021558Z"},"trusted":true},"outputs":[],"source":["# Configuration de DSPY sur le llm et le rm\n","dspy.settings.configure(lm = llm, \n","                        rm = rm)"]},{"cell_type":"markdown","metadata":{},"source":["# 6. Mise en place du RAG\n"]},{"cell_type":"markdown","metadata":{},"source":["## 6.1 Sans compilation (entraînement)"]},{"cell_type":"code","execution_count":null,"metadata":{"execution":{"iopub.status.busy":"2024-07-15T09:36:03.023028Z","iopub.status.idle":"2024-07-15T09:36:03.023454Z","shell.execute_reply":"2024-07-15T09:36:03.023251Z","shell.execute_reply.started":"2024-07-15T09:36:03.023233Z"},"trusted":true},"outputs":[],"source":["class RAG(dspy.Module):\n","    def __init__(self, num_passages=3):\n","        super().__init__()\n","\n","        self.retrieve = dspy.Retrieve(k=num_passages)\n","        self.generate_answer = dspy.ChainOfThought(\"context, question -> answer\")\n","    \n","    def forward(self, question):\n","        context = self.retrieve(question).passages\n","        prediction = self.generate_answer(context=context, question=question)\n","        return dspy.Prediction(context=context, answer=prediction.answer)"]},{"cell_type":"code","execution_count":null,"metadata":{"_kg_hide-output":false,"execution":{"iopub.status.busy":"2024-07-15T09:36:03.025087Z","iopub.status.idle":"2024-07-15T09:36:03.025513Z","shell.execute_reply":"2024-07-15T09:36:03.025308Z","shell.execute_reply.started":"2024-07-15T09:36:03.025290Z"},"trusted":true},"outputs":[],"source":["uncompiled_rag = RAG()\n","\n","response = uncompiled_rag(example_query)\n","\n","print(response.answer)"]},{"cell_type":"code","execution_count":null,"metadata":{"_kg_hide-output":true,"execution":{"iopub.status.busy":"2024-07-15T09:36:03.026743Z","iopub.status.idle":"2024-07-15T09:36:03.027222Z","shell.execute_reply":"2024-07-15T09:36:03.026980Z","shell.execute_reply.started":"2024-07-15T09:36:03.026962Z"},"trusted":true},"outputs":[],"source":["llm.inspect_history(n=1)"]},{"cell_type":"markdown","metadata":{},"source":["## 6.2 Avec compilation (entraînement)"]},{"cell_type":"code","execution_count":null,"metadata":{"execution":{"iopub.status.busy":"2024-07-15T09:36:03.031281Z","iopub.status.idle":"2024-07-15T09:36:03.031715Z","shell.execute_reply":"2024-07-15T09:36:03.031509Z","shell.execute_reply.started":"2024-07-15T09:36:03.031490Z"},"trusted":true},"outputs":[],"source":["example_question1 = \"Has there been Kaggle competition about cute animals and if yes, which one?\"\n","example_answer1 = \"You might be interested in the PetFinder.my Adoption Prediction competition.\"\n","\n","example_question2 = \"I'm interested in autonomous driving. What Kaggle competition can you recommend?\"\n","example_answer2 =\"You might be interested in the Lyft Motion Prediction for Autonomous Vehicles or Lyft 3D Object Detection for Autonomous Vehicles competition,\"\n","\n","example_question3 = \"What Kaggle competitions should I look at to learn more about predicting the stock market?\"\n","example_answer3 = \"You might be interested in the JPX Tokyo Stock Exchange Prediction or Jane Street Market Prediction or Ubiquant Market Prediction competition.\""]},{"cell_type":"code","execution_count":null,"metadata":{"execution":{"iopub.status.busy":"2024-07-15T09:36:03.032573Z","iopub.status.idle":"2024-07-15T09:36:03.033009Z","shell.execute_reply":"2024-07-15T09:36:03.032786Z","shell.execute_reply.started":"2024-07-15T09:36:03.032768Z"},"trusted":true},"outputs":[],"source":["trainset = [dspy.Example(question=example_question1, \n","                         answer=example_answer1).with_inputs('question'),\n","            dspy.Example(question=example_question2, \n","                         answer=example_answer2).with_inputs('question'),\n","           dspy.Example(question=example_question3, \n","                         answer=example_answer3).with_inputs('question'),]\n","trainset"]},{"cell_type":"code","execution_count":null,"metadata":{"execution":{"iopub.status.busy":"2024-07-15T09:36:03.034248Z","iopub.status.idle":"2024-07-15T09:36:03.034593Z","shell.execute_reply":"2024-07-15T09:36:03.034433Z","shell.execute_reply.started":"2024-07-15T09:36:03.034418Z"},"trusted":true},"outputs":[],"source":["!pip uninstall -y wandb"]},{"cell_type":"code","execution_count":null,"metadata":{"_kg_hide-output":true,"execution":{"iopub.status.busy":"2024-07-15T09:36:03.035932Z","iopub.status.idle":"2024-07-15T09:36:03.036343Z","shell.execute_reply":"2024-07-15T09:36:03.036127Z","shell.execute_reply.started":"2024-07-15T09:36:03.036104Z"},"trusted":true},"outputs":[],"source":["from dspy.teleprompt import BootstrapFewShot\n","\n","teleprompter = BootstrapFewShot(metric=dspy.evaluate.answer_exact_match)\n","compiled_rag = teleprompter.compile(RAG(), trainset=trainset)"]},{"cell_type":"code","execution_count":null,"metadata":{"execution":{"iopub.status.busy":"2024-07-15T09:36:03.039034Z","iopub.status.idle":"2024-07-15T09:36:03.039539Z","shell.execute_reply":"2024-07-15T09:36:03.039316Z","shell.execute_reply.started":"2024-07-15T09:36:03.039296Z"},"trusted":true},"outputs":[],"source":["response = compiled_rag(example_query)\n","\n","print(response.answer)"]}],"metadata":{"kaggle":{"accelerator":"gpu","dataSources":[{"databundleVersionId":7669720,"sourceId":64148,"sourceType":"competition"},{"databundleVersionId":9119537,"datasetId":9,"sourceId":8956039,"sourceType":"datasetVersion"},{"databundleVersionId":7771674,"modelInstanceId":5171,"sourceId":11371,"sourceType":"modelInstanceVersion"}],"dockerImageVersionId":30648,"isGpuEnabled":true,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"}},"nbformat":4,"nbformat_minor":4}
